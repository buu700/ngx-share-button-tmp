{"version":3,"file":"ngx-share-button.umd.js.map","sources":["ng://@ngx-share/button/lib/share-button.ts","ng://@ngx-share/button/lib/share-button.module.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  ViewChild,\n  HostBinding,\n  AfterViewInit,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { ShareService, ShareDirective } from '@ngx-share/core';\n\n@Component({\n  selector: 'share-button',\n  templateUrl: './share-button.html',\n  styleUrls: ['./share-button.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShareButton implements AfterViewInit {\n\n  /** The sharing link */\n  url: string;\n\n  /** Share count value */\n  shareCount: number;\n\n  /** Button name */\n  button: string;\n\n  @Input('button') set createButton(button: string) {\n    this.shareCount = 0;\n    this.button = button;\n  }\n\n  /** Set the sharing link */\n  @Input('url') set setUrl(url: string) {\n    this.shareCount = 0;\n    this.url = url;\n  }\n\n  /** The title parameter */\n  @Input() title: string;\n\n  /** The description parameter */\n  @Input() description: string;\n\n  /** The image parameter for sharing on Pinterest */\n  @Input() image: string;\n\n  /** The tags parameter for sharing on Twitter and Tumblr */\n  @Input() tags: string;\n\n  /** Sets meta tags from document head, useful when SEO is available */\n  @Input() autoSetMeta: boolean;\n\n  /** Show button icon */\n  @Input() showIcon = true;\n\n  /** Show button text */\n  @Input() showText = false;\n\n  /** Show sharing count */\n  @Input() showCount = false;\n\n  /** Button custom text */\n  @Input() text: string;\n\n  /** Button custom icon */\n  @Input() icon: string;\n\n  /** Button size */\n  @Input() size: number = this._share.config.size;\n\n  /** Button theme */\n  @Input() theme: string = this._share.config.theme;\n\n  /** Stream that emits when share count is fetched */\n  @Output() count = new EventEmitter<number>();\n\n  /** Stream that emits when share dialog is opened */\n  @Output() opened = new EventEmitter<string>();\n\n  /** Stream that emits when share dialog is closed */\n  @Output() closed = new EventEmitter<string>();\n\n  /** Set theme as button class */\n  @HostBinding('class') get buttonClass() {\n    return `sb-button sb-${this.theme}`;\n  }\n\n  @ViewChild(ShareDirective) ref: ShareDirective;\n\n  constructor(private _cd: ChangeDetectorRef,\n              private _share: ShareService) {\n  }\n\n  ngAfterViewInit() {\n    this._cd.detectChanges();\n  }\n\n  onCount(count: number) {\n    this.shareCount = count;\n    this.count.emit(count);\n  }\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ShareModule, ShareButtonsConfig, SHARE_BUTTONS_CONFIG } from '@ngx-share/core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { ShareButton } from './share-button';\n\n@NgModule({\n  declarations: [\n    ShareButton\n  ],\n  imports: [\n    ShareModule,\n    FontAwesomeModule,\n    CommonModule\n  ],\n  exports: [\n    ShareModule,\n    FontAwesomeModule,\n    ShareButton\n  ]\n})\nexport class ShareButtonModule {\n  static withConfig(config?: ShareButtonsConfig): ModuleWithProviders {\n    return {\n      ngModule: ShareButtonModule,\n      providers: [{provide: SHARE_BUTTONS_CONFIG, useValue: config}]\n    };\n  }\n}\n"],"names":["EventEmitter","Component","ChangeDetectionStrategy","ChangeDetectorRef","ShareService","Input","Output","HostBinding","ViewChild","ShareDirective","SHARE_BUTTONS_CONFIG","NgModule","ShareModule","FontAwesomeModule","CommonModule"],"mappings":";;;;;;;;;;AAAA;QA6FE,qBAAoB,GAAsB,EACtB,MAAoB;YADpB,QAAG,GAAH,GAAG,CAAmB;YACtB,WAAM,GAAN,MAAM,CAAc;;;;YArC/B,aAAQ,GAAG,IAAI,CAAC;;;;YAGhB,aAAQ,GAAG,KAAK,CAAC;;;;YAGjB,cAAS,GAAG,KAAK,CAAC;;;;YASlB,SAAI,GAAW,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;;;;YAGvC,UAAK,GAAW,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;;;;YAGxC,UAAK,GAAG,IAAIA,iBAAY,EAAU,CAAC;;;;YAGnC,WAAM,GAAG,IAAIA,iBAAY,EAAU,CAAC;;;;YAGpC,WAAM,GAAG,IAAIA,iBAAY,EAAU,CAAC;SAW7C;QAjED,sBAAqB,qCAAY;;;;gBAAjC,UAAkC,MAAc;gBAC9C,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aACtB;;;WAAA;QAGD,sBAAkB,+BAAM;;;;;;gBAAxB,UAAyB,GAAW;gBAClC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;aAChB;;;WAAA;QAgDD,sBAA0B,oCAAW;;;;;gBAArC;gBACE,OAAO,kBAAgB,IAAI,CAAC,KAAO,CAAC;aACrC;;;WAAA;;;;QAQD,qCAAe;;;YAAf;gBACE,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC1B;;;;;QAED,6BAAO;;;;YAAP,UAAQ,KAAa;gBACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACxB;;oBA3FFC,cAAS,SAAC;wBACT,QAAQ,EAAE,cAAc;wBACxB,ynCAAkC;wBAElC,eAAe,EAAEC,4BAAuB,CAAC,MAAM;;qBAChD;;;;;wBATCC,sBAAiB;wBAEVC,mBAAY;;;;mCAmBlBC,UAAK,SAAC,QAAQ;6BAMdA,UAAK,SAAC,KAAK;4BAMXA,UAAK;kCAGLA,UAAK;4BAGLA,UAAK;2BAGLA,UAAK;kCAGLA,UAAK;+BAGLA,UAAK;+BAGLA,UAAK;gCAGLA,UAAK;2BAGLA,UAAK;2BAGLA,UAAK;2BAGLA,UAAK;4BAGLA,UAAK;4BAGLC,WAAM;6BAGNA,WAAM;6BAGNA,WAAM;kCAGNC,gBAAW,SAAC,OAAO;0BAInBC,cAAS,SAACC,qBAAc;;QAe3B,kBAAC;KA7FD;;;;;;ACbA;QAOA;SAsBC;;;;;QANQ,4BAAU;;;;YAAjB,UAAkB,MAA2B;gBAC3C,OAAO;oBACL,QAAQ,EAAE,iBAAiB;oBAC3B,SAAS,EAAE,CAAC,EAAC,OAAO,EAAEC,2BAAoB,EAAE,QAAQ,EAAE,MAAM,EAAC,CAAC;iBAC/D,CAAC;aACH;;oBArBFC,aAAQ,SAAC;wBACR,YAAY,EAAE;4BACZ,WAAW;yBACZ;wBACD,OAAO,EAAE;4BACPC,kBAAW;4BACXC,oCAAiB;4BACjBC,mBAAY;yBACb;wBACD,OAAO,EAAE;4BACPF,kBAAW;4BACXC,oCAAiB;4BACjB,WAAW;yBACZ;qBACF;;QAQD,wBAAC;KAtBD;;;;;;;;;;;;;;;;;;;;;;;"}
