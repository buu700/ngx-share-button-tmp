{"version":3,"sources":["ng://@ngx-share/button/lib/share-button.ts","ng://@ngx-share/button/lib/share-button.module.ts"],"names":["ShareButton","Object","defineProperty","prototype","button","this","shareCount","url","theme","ngAfterViewInit","_cd","detectChanges","onCount","count","emit","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","ShareService","Input","Output","HostBinding","ViewChild","ShareDirective","_share","showIcon","showText","showCount","size","config","EventEmitter","opened","closed","ShareButtonModule","withConfig","ngModule","providers","provide","SHARE_BUTTONS_CONFIG","useValue","NgModule","declarations","imports","ShareModule","FontAwesomeModule","CommonModule","exports"],"mappings":"4gBAAA,IAAAA,GA8BEC,OAAAC,eAAqBF,EAAAG,UAAA,eAAY,KAAjC,SAAkCC,GAChCC,KAAKC,WAAa,EAClBD,KAAKD,OAASA,mCAIhBH,OAAAC,eAAkBF,EAAAG,UAAA,SAAM,KAAxB,SAAyBI,GACvBF,KAAKC,WAAa,EAClBD,KAAKE,IAAMA,mCAiDbN,OAAAC,eAA0BF,EAAAG,UAAA,cAAW,KAArC,WACE,MAAO,gBAAgBE,KAAKG,uCAS9BR,EAAAG,UAAAM,gBAAA,WACEJ,KAAKK,IAAIC,iBAGXX,EAAAG,UAAAS,QAAA,SAAQC,GACNR,KAAKC,WAAaO,EAClBR,KAAKQ,MAAMC,KAAKD,wBA1FnBE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,eACVC,SAAA,4jCAEAC,gBAAiBC,EAAAA,wBAAwBC,8rCARzCC,EAAAA,yBAEOC,EAAAA,sDAmBNC,EAAAA,MAAKR,KAAA,CAAC,0BAMNQ,EAAAA,MAAKR,KAAA,CAAC,sBAMNQ,EAAAA,2BAGAA,EAAAA,qBAGAA,EAAAA,oBAGAA,EAAAA,2BAGAA,EAAAA,wBAGAA,EAAAA,wBAGAA,EAAAA,yBAGAA,EAAAA,oBAGAA,EAAAA,oBAGAA,EAAAA,oBAGAA,EAAAA,qBAGAA,EAAAA,qBAGAC,EAAAA,uBAGAA,EAAAA,uBAGAA,EAAAA,4BAGAC,EAAAA,YAAWV,KAAA,CAAC,sBAIZW,EAAAA,UAASX,KAAA,CAACY,EAAAA,mBAeb5B,GAbE,SAAAA,EAAoBU,EACAmB,GADAxB,KAAAK,IAAAA,EACAL,KAAAwB,OAAAA,EArCXxB,KAAAyB,UAAW,EAGXzB,KAAA0B,UAAW,EAGX1B,KAAA2B,WAAY,EASZ3B,KAAA4B,KAAe5B,KAAKwB,OAAOK,OAAOD,KAGlC5B,KAAAG,MAAgBH,KAAKwB,OAAOK,OAAO1B,MAGlCH,KAAAQ,MAAQ,IAAIsB,EAAAA,aAGZ9B,KAAA+B,OAAS,IAAID,EAAAA,aAGb9B,KAAAgC,OAAS,IAAIF,EAAAA,aCpFzB,IAAAG,GAuBSA,EAAAC,WAAP,SAAkBL,GAChB,MAAO,CACLM,SAAUF,EACVG,UAAW,CAAC,CAACC,QAASC,EAAAA,qBAAsBC,SAAUV,0BAnB3DW,EAAAA,SAAQ7B,KAAA,CAAC,CACR8B,aAAc,CACZ9C,GAEF+C,QAAS,CACPC,EAAAA,YACAC,EAAAA,kBACAC,EAAAA,cAEFC,QAAS,CACPH,EAAAA,YACAC,EAAAA,kBACAjD,OAUJsC,GAtBA,SAAAA","sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  ViewChild,\n  HostBinding,\n  AfterViewInit,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { ShareService, ShareDirective } from '@ngx-share/core';\n\n@Component({\n  selector: 'share-button',\n  templateUrl: './share-button.html',\n  styleUrls: ['./share-button.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ShareButton implements AfterViewInit {\n\n  /** The sharing link */\n  url: string;\n\n  /** Share count value */\n  shareCount: number;\n\n  /** Button name */\n  button: string;\n\n  @Input('button') set createButton(button: string) {\n    this.shareCount = 0;\n    this.button = button;\n  }\n\n  /** Set the sharing link */\n  @Input('url') set setUrl(url: string) {\n    this.shareCount = 0;\n    this.url = url;\n  }\n\n  /** The title parameter */\n  @Input() title: string;\n\n  /** The description parameter */\n  @Input() description: string;\n\n  /** The image parameter for sharing on Pinterest */\n  @Input() image: string;\n\n  /** The tags parameter for sharing on Twitter and Tumblr */\n  @Input() tags: string;\n\n  /** Sets meta tags from document head, useful when SEO is available */\n  @Input() autoSetMeta: boolean;\n\n  /** Show button icon */\n  @Input() showIcon = true;\n\n  /** Show button text */\n  @Input() showText = false;\n\n  /** Show sharing count */\n  @Input() showCount = false;\n\n  /** Button custom text */\n  @Input() text: string;\n\n  /** Button custom icon */\n  @Input() icon: string;\n\n  /** Button size */\n  @Input() size: number = this._share.config.size;\n\n  /** Button theme */\n  @Input() theme: string = this._share.config.theme;\n\n  /** Stream that emits when share count is fetched */\n  @Output() count = new EventEmitter<number>();\n\n  /** Stream that emits when share dialog is opened */\n  @Output() opened = new EventEmitter<string>();\n\n  /** Stream that emits when share dialog is closed */\n  @Output() closed = new EventEmitter<string>();\n\n  /** Set theme as button class */\n  @HostBinding('class') get buttonClass() {\n    return `sb-button sb-${this.theme}`;\n  }\n\n  @ViewChild(ShareDirective) ref: ShareDirective;\n\n  constructor(private _cd: ChangeDetectorRef,\n              private _share: ShareService) {\n  }\n\n  ngAfterViewInit() {\n    this._cd.detectChanges();\n  }\n\n  onCount(count: number) {\n    this.shareCount = count;\n    this.count.emit(count);\n  }\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ShareModule, ShareButtonsConfig, SHARE_BUTTONS_CONFIG } from '@ngx-share/core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { ShareButton } from './share-button';\n\n@NgModule({\n  declarations: [\n    ShareButton\n  ],\n  imports: [\n    ShareModule,\n    FontAwesomeModule,\n    CommonModule\n  ],\n  exports: [\n    ShareModule,\n    FontAwesomeModule,\n    ShareButton\n  ]\n})\nexport class ShareButtonModule {\n  static withConfig(config?: ShareButtonsConfig): ModuleWithProviders {\n    return {\n      ngModule: ShareButtonModule,\n      providers: [{provide: SHARE_BUTTONS_CONFIG, useValue: config}]\n    };\n  }\n}\n"]}